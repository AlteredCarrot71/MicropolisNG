<!--
    // This file is part of Micropolis for WinRT.
    // Copyright (C) 2014 Andreas Balzer, Felix Dietrich, Florian Thurnwald and Ivo Vutov
    // Portions Copyright (C) MicropolisJ by Jason Long
    // Portions Copyright (C) Micropolis Don Hopkins
    // Portions Copyright (C) 1989-2007 Electronic Arts Inc.
    //
    // Micropolis for WinRT is free software; you can redistribute it and/or modify
    // it under the terms of the GNU GPLv3, with Additional terms.
    // See the README file, included in this distribution, for details.
    // Project website: http://code.google.com/p/micropolis/
    -->
<UserControl
    x:Class="Micropolis.NewCityDialogSmall"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Micropolis"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="400"
    d:DesignWidth="700">
    
    <UserControl.Resources>
        <ControlTemplate x:Key="LevelButtonTemplate" TargetType="RadioButton">
            <Button x:Name="button" Foreground="Black" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0" Background="Transparent" Content="{TemplateBinding Content}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimation Duration="0" To="#506381" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="button" d:IsOptimized="True"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked"/>
                        <VisualState x:Name="Indeterminate"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
               
            </Button>
        </ControlTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <local:OverlayMapView x:Name="mapPane" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
            <Button x:Name="previousMapBtn" Command="{Binding PreviousMapCommand}" FontFamily="Segoe MDL2 Assets" Content="" IsEnabled="{Binding PreviousMapButtonIsEnabled}" HorizontalAlignment="Left" Background="White" Foreground="Black" />
            <Button x:Name="nextMapBtn" Command="{Binding NextMapCommand}" FontFamily="Segoe MDL2 Assets" Content="" HorizontalAlignment="Right" Background="White" Foreground="Black"/>
        </Grid>
        <ItemsControl Background="Green" Grid.Row="1" VerticalAlignment="Center" x:Name="levelBox" ItemsSource="{Binding Levels, Mode=TwoWay}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <RadioButton Background="Red" Content="{Binding Text}" Command="{Binding ClickCommand}" IsChecked="{Binding IsChecked, Mode=TwoWay}" Template="{StaticResource LevelButtonTemplate}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Button Grid.Row="2" x:Name="thisMapBtn" Foreground="White" HorizontalAlignment="Stretch" Background="#506381" Command="{Binding ThisMapCommand}" Content="{Binding ThisMapButtonText}"/>
    </Grid>
</UserControl>
